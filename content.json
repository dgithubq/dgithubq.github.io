{"meta":{"title":"芋泥の宝藏屋","subtitle":"dwhの博客","description":"博客因兴趣诞生,在不断完善中","author":"dwh520dyn","url":"https://dgithubq.github.io","root":"/"},"pages":[{"title":"关于本站","date":"2020-04-19T04:58:56.000Z","updated":"2021-08-02T02:38:15.539Z","comments":false,"path":"about/index.html","permalink":"https://dgithubq.github.io/about/index.html","excerpt":"","text":"仙气の云彩“ 认识自我、超越自我 “ 那么你离成功就又进了一步！ 当你在项目中感觉所要学习的人和事越来越多时，说明你在 成长 。 当你感觉要责怪的人和事越来越少时，说明你在 成熟 。 当你在项目中不断获得了友谊和朋友时，说明你将取得项目的 成功 。 联系我B站：仙气のxianqi（萌新up） QQ：2287853439 （嘀嘀~，麻烦让一下，我要开车了！） 座右铭：既然选择了远方 便只顾风雨兼程"},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-27T12:40:24.587Z","comments":true,"path":"archives/index.html","permalink":"https://dgithubq.github.io/archives/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-11-24T07:12:19.000Z","updated":"2021-07-26T14:44:28.785Z","comments":false,"path":"categories/index.html","permalink":"https://dgithubq.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-06-07T14:17:49.000Z","updated":"2021-07-27T07:31:10.990Z","comments":true,"path":"link/index.html","permalink":"https://dgithubq.github.io/link/index.html","excerpt":"","text":""},{"title":"留言板","date":"2020-10-31T02:11:28.000Z","updated":"2021-11-23T10:50:01.880Z","comments":false,"path":"comments/index.html","permalink":"https://dgithubq.github.io/comments/index.html","excerpt":"","text":""},{"title":"我的歌单","date":"2019-05-17T08:14:00.000Z","updated":"2021-07-26T13:06:52.537Z","comments":true,"path":"music/index.html","permalink":"https://dgithubq.github.io/music/index.html","excerpt":"","text":""},{"title":"","date":"2022-03-02T11:47:07.601Z","updated":"2019-12-04T15:56:02.000Z","comments":true,"path":"live2d-widget-master/README.html","permalink":"https://dgithubq.github.io/live2d-widget-master/README.html","excerpt":"","text":"Live2D Widget特性 Feature在网页中添加Live2D看板娘。兼容PJAX，支持无刷新加载。Add Live2D widget to web page. Compatible with PJAX. 警告：不支持IE。WARNING: DO NOT SUPPORT IE. 示例 Demo在米米的博客的左下角可查看效果。需要使用支持WebGL的现代浏览器浏览。 这个仓库中也提供了两个Demo，即 demo1.html ，展现基础效果 demo2.html ，仿NPM的登陆界面 依赖 Dependencies本插件需要jQuery和font-awesome支持，请确保它们已在页面中加载，例如在&lt;head&gt;中加入：jQuery and font-awesome is required for this plugin. You can add this to &lt;head&gt;: &lt;script src=\"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js\"&gt;&lt;/script&gt; &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\"&gt; 否则无法正常显示。（如果你的网页已经加载了jQuery，就不要重复加载了） 使用 Usage你可以直接这样使用： &lt;script src=\"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.js\"&gt;&lt;/script&gt; 将这一行代码加入&lt;head&gt;或&lt;body&gt;，即可看到效果。如果你的网站启用了PJAX，由于看板娘不必每页刷新，因此需要注意将相关脚本放到PJAX刷新区域之外。 换句话说，如果你是小白，或者只需要最基础的功能，就只需要： 把这一行代码，连同前面的两行代码，一起放到html的&lt;head&gt;中即可； 如果页面是用各种模版引擎、php、asp生成的，也要自行修改，方法类似，只是可能略为麻烦。 但是！我们强烈推荐自己进行配置，否则很多功能是不完整的，并且可能产生问题！如果你有兴趣自己折腾的话，请看下面的详细说明。 Using CDN如果要自定义有关内容，可以把这个仓库Fork一份，然后进行修改。这时，使用方法对应地变为 &lt;script src=\"https://cdn.jsdelivr.net/gh/username/live2d-widget/autoload.js\"&gt;&lt;/script&gt; 将username替换为你的GitHub用户名即可。 Self-host你也可以直接把这些文件放到服务器上，而不是通过CDN加载。 如果你可以通过ssh访问你的主机，请把整个项目克隆到服务器上。执行：cd /path/to/your/webroot # Clone this repository git clone https://github.com/stevenjoezhang/live2d-widget.git 如果你的主机无法用ssh连接（例如一般的虚拟主机），请选择Download ZIP，然后通过ftp上传到主机上，再解压到网站的目录下。 如果你是通过Hexo等工具部署的静态博客，请选择Download ZIP，然后解压到本地的博客目录下，例如source下与_posts同级的目录。重新部署博客时，相关文件就会自动上传到对应的目录。（还需要在Hexo主题相关的ejs或njk模版中正确配置路径，才可以加载） 这样，整个项目就可以通过你的服务器IP或者域名从公网访问了。你可以试试能否正常地通过浏览器打开autoload.js和live2d.min.js等文件。如果没有问题，接下来需要修改一些配置。（需要通过服务器上的文本编辑器修改；你也可以先在本地完成这一步骤，再上传到服务器上）修改autoload.js中的参数live2d_path为live2d-widget这一文件夹在公网上的路径。比如说，如果你可以通过 https://www.example.com/path/to/live2d-widget/live2d.min.js 访问到live2d.min.js，那么就把live2d_path的值修改为 https://www.example.com/path/to/live2d-widget/ 路径末尾的/一定要加上。具体可以参考autoload.js内的注释。完成后，在你要添加看板娘的界面加入 &lt;script src=\"https://www.example.com/path/to/live2d-widget/autoload.js\"&gt;&lt;/script&gt; 就可以加载了。 目录结构 Files waifu-tips.json中包含了触发条件（selector，选择器）和触发时显示的文字（text）； waifu.css是看板娘的样式表。 源文件是对Hexo的NexT主题有效的，为了适用于你自己的网页，可能需要自行修改，或增加新内容。警告：作者不对包括但不限于waifu-tips.json和waifu-tips.js文件中的内容负责，请自行确保它们是合适的。 如果有任何疑问，欢迎提Issue。如果有任何修改建议，欢迎提PR。 鸣谢 Credits代码自这篇博文魔改而来：https://www.fghrsh.net/post/123.html相比初始的版本，这个仓库增加了一些功能，并优化了提示展现机制。 更多内容可以参考：https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02https://github.com/xiazeyu/live2d-widget.jshttps://github.com/summerscar/live2dDemo 还可以自行搭建后端api，并增加模型（需要修改的内容比较多，此处不再赘述）：https://github.com/fghrsh/live2d_apihttps://github.com/xiazeyu/live2d-widget-modelshttps://github.com/xiaoski/live2d_models_collection 除此之外，还有桌面版本：https://github.com/amorist/platelethttps://github.com/akiroz/Live2D-Widget 点击看板娘的纸飞机按钮时，会出现一个彩蛋，这来自于WebsiteAsteroids。 更多 MoreLive2D官方网站：https://www.live2d.com/en/https://live2d.github.io 可以在官方网站下载、打包SDK，以获取更多的功能。具体操作是： 点击Cubism SDK for Web，下载相关文件； 解压并进入目录，执行npm install； 执行npm run build-sample。 许可证 LicenseReleased under the GNU General Public License v3http://www.gnu.org/licenses/gpl-3.0.html 更新 Update2018年10月31日，由fghrsh提供的原API停用，请更新至新地址。参考文章：https://www.fghrsh.net/post/170.html"},{"title":"","date":"2022-03-02T11:47:07.604Z","updated":"2019-12-04T15:56:02.000Z","comments":true,"path":"live2d-widget-master/autoload.js","permalink":"https://dgithubq.github.io/live2d-widget-master/autoload.js","excerpt":"","text":"//注意：live2d_path参数应使用绝对路径 const live2d_path = \"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/\"; //const live2d_path = \"/live2d-widget/\"; //封装异步加载资源的方法 function loadExternalResource(url, type) { return new Promise((resolve, reject) =&gt; { let tag; if (type === \"css\") { tag = document.createElement(\"link\"); tag.rel = \"stylesheet\"; tag.href = url; } else if (type === \"js\") { tag = document.createElement(\"script\"); tag.src = url; } if (tag) { tag.onload = () =&gt; resolve(url); tag.onerror = () =&gt; reject(url); document.head.appendChild(tag); } }); } //加载waifu.css live2d.min.js waifu-tips.js Promise.all([ loadExternalResource(live2d_path + \"waifu.css\", \"css\"), loadExternalResource(live2d_path + \"live2d.min.js\", \"js\"), loadExternalResource(live2d_path + \"waifu-tips.js\", \"js\") ]).then(() =&gt; { initWidget(live2d_path + \"waifu-tips.json\", \"https://live2d.fghrsh.net/api\"); }); //initWidget第一个参数为waifu-tips.json的路径，第二个参数为api地址 //api后端可自行搭建，参考https://github.com/fghrsh/live2d_api //初始化看板娘会自动加载指定目录下的waifu-tips.json console.log(` く__,.ヘヽ. / ,ー､ 〉 ＼ ', !-─‐-i / /´ ／｀ｰ' L/／｀ヽ､ / ／, /| , , ', ｲ / /-‐/ ｉ L_ ﾊ ヽ! i ﾚ ﾍ 7ｲ｀ﾄ ﾚ'ｧ-ﾄ､!ハ| | !,/7 '0' ´0iソ| | |.从\" _ ,,,, / |./ | ﾚ'| i＞.､,,__ _,.イ / .i | ﾚ'| | / k_７_/ﾚ'ヽ, ﾊ. | | |/i 〈|/ i ,.ﾍ | i | .|/ / ｉ： ﾍ! ＼ | kヽ&gt;､ﾊ _,.ﾍ､ /､! !'〈//｀Ｔ´', ＼ ｀'7'ｰr' ﾚ'ヽL__|___i,___,ンﾚ|ノ ﾄ-,/ |___./ 'ｰ' !_,.: `);"},{"title":"","date":"2022-03-02T11:47:07.608Z","updated":"2019-12-04T15:56:02.000Z","comments":true,"path":"live2d-widget-master/waifu-tips.json","permalink":"https://dgithubq.github.io/live2d-widget-master/waifu-tips.json","excerpt":"","text":"{\"mouseover\":[{\"selector\":\"#waifu #live2d\",\"text\":[\"干嘛呢你，快把手拿开～～\",\"鼠…鼠标放错地方了！\",\"你要干嘛呀？\",\"喵喵喵？\",\"怕怕(ノ≧∇≦)ノ\",\"非礼呀！救命！\",\"这样的话，只能使用武力了！\",\"我要生气了哦\",\"不要动手动脚的！\",\"真…真的是不知羞耻！\",\"Hentai！\"]},{\"selector\":\"#waifu-tool .fa-comment\",\"text\":[\"猜猜我要说些什么？\",\"我从青蛙王子那里听到了不少人生经验。\"]},{\"selector\":\"#waifu-tool .fa-paper-plane\",\"text\":[\"要不要来玩飞机大战？\",\"这个按钮上写着“不要点击”。\",\"怎么，你想来和我玩个游戏？\",\"听说这样可以蹦迪！\"]},{\"selector\":\"#waifu-tool .fa-user-circle\",\"text\":[\"你是不是不爱人家了呀，呜呜呜～\",\"要见见我的姐姐嘛？\",\"想要看我妹妹嘛？\",\"要切换看板娘吗？\"]},{\"selector\":\"#waifu-tool .fa-street-view\",\"text\":[\"喜欢换装 PLAY 吗？\",\"这次要扮演什么呢？\",\"变装！\",\"让我们看看接下来会发生什么！\"]},{\"selector\":\"#waifu-tool .fa-camera-retro\",\"text\":[\"你要给我拍照呀？一二三～茄子～\",\"要不，我们来合影吧！\",\"保持微笑就好了～\"]},{\"selector\":\"#waifu-tool .fa-info-circle\",\"text\":[\"想要知道更多关于我的事么？\",\"这里记录着我搬家的历史呢。\",\"你想深入了解我什么呢？\"]},{\"selector\":\"#waifu-tool .fa-times\",\"text\":[\"到了要说再见的时候了吗？\",\"呜呜 QAQ 后会有期……\",\"不要抛弃我呀……\",\"我们，还能再见面吗……\",\"哼，你会后悔的！\"]},{\"selector\":\".menu-item-home\",\"text\":[\"点击前往首页，想回到上一页可以使用浏览器的后退功能哦。\",\"点它就可以回到首页啦！\",\"回首页看看吧。\"]},{\"selector\":\".menu-item-about\",\"text\":[\"你想知道我家主人是谁吗？\",\"这里有一些关于我家主人的秘密哦，要不要看看呢？\",\"发现主人出没地点！\"]},{\"selector\":\".menu-item-tags\",\"text\":[\"点击就可以看文章的标签啦！\",\"点击来查看所有标签哦。\",\"快看看这里都有什么呢！\"]},{\"selector\":\".menu-item-categories\",\"text\":[\"文章都分类好啦～\",\"点击来查看文章分类哦。\",\"快看看这里都有什么呢！\"]},{\"selector\":\".menu-item-archives\",\"text\":[\"翻页比较麻烦吗，那就来看看文章归档吧。\",\"文章目录都整理在这里啦！\",\"快看看这里都有什么呢？\"]},{\"selector\":\".menu-item-friends\",\"text\":[\"这是我的朋友们哦ヾ(◍°∇°◍)ﾉﾞ\",\"要去大佬们的家看看吗？\",\"要去拜访一下我的朋友们吗？\"]},{\"selector\":\".menu-item-search\",\"text\":[\"找不到想看的内容？搜索看看吧！\",\"在找什么东西呢，需要帮忙吗？\"]},{\"selector\":\".site-author\",\"text\":[\"我家主人好看吗？\",\"这是我家主人(*´∇｀*)\"]},{\"selector\":\".site-state\",\"text\":[\"这是文章的统计信息～\",\"要不要点进去看看？\"]},{\"selector\":\".feed-link a\",\"text\":[\"这里可以使用 RSS 订阅呢！\",\"利用 feed 订阅器，就能快速知道博客有没有更新了呢。\"]},{\"selector\":\".cc-opacity, .post-copyright-author\",\"text\":[\"要记得规范转载哦。\",\"所有文章均采用 CC BY-NC-SA 4.0 许可协议～\",\"转载前要先注意下文章的版权协议呢。\"]},{\"selector\":\".links-of-author\",\"text\":[\"这里是主人的常驻地址哦。\",\"这里有主人的联系方式！\"]},{\"selector\":\"#qrcode\",\"text\":[\"手机扫一下就能继续看，很方便呢～\",\"扫一扫，打开新世界的大门！\"]},{\"selector\":\".fancybox img, img.medium-zoom-image\",\"text\":[\"点击图片可以放大呢！\"]},{\"selector\":\".highlight-wrap, .gist\",\"text\":[\"代码可以直接点击复制哟。\",\"GitHub！我是新手！\",\"PHP 是最好的语言！\"]},{\"selector\":\".container a[href^='http'], .nav-link .nav-text\",\"text\":[\"要去看看 {text} 么？\",\"去 {text} 逛逛吧。\",\"到 {text} 看看吧。\"]},{\"selector\":\"a[href^='mailto']\",\"text\":[\"邮件我会及时回复的！\",\"点击就可以发送邮件啦～\"]},{\"selector\":\"a[href^='/tags/']\",\"text\":[\"要去看看 {text} 标签么？\",\"点它可以查看此标签下的所有文章哟！\"]},{\"selector\":\"a[href^='/categories/']\",\"text\":[\"要去看看 {text} 分类么？\",\"点它可以查看此分类下的所有文章哟！\"]},{\"selector\":\".post-title-link\",\"text\":[\"要看看 {text} 这篇文章吗？\"]},{\"selector\":\"a[rel='contents']\",\"text\":[\"点击来阅读全文哦。\"]},{\"selector\":\"a[itemprop='discussionUrl']\",\"text\":[\"要去看看评论吗？\"]},{\"selector\":\".back-to-top\",\"text\":[\"点它就可以回到顶部啦！\",\"又回到最初的起点～\",\"要回到开始的地方么？\"]},{\"selector\":\"#rewardButton\",\"text\":[\"我是不是棒棒哒～快给我点赞吧！\",\"要打赏我嘛？好期待啊～\",\"主人最近在吃土呢，很辛苦的样子，给他一些钱钱吧～\"]},{\"selector\":\"#wechat\",\"text\":[\"这是我的微信二维码～\"]},{\"selector\":\"#alipay\",\"text\":[\"这是我的支付宝哦！\"]},{\"selector\":\"#bitcoin\",\"text\":[\"这是我的比特币账号！\"]},{\"selector\":\"#needsharebutton-postbottom .btn\",\"text\":[\"好东西要让更多人知道才行哦。\",\"觉得文章有帮助的话，可以分享给更多需要的朋友呢。\"]},{\"selector\":\".need-share-button_weibo\",\"text\":[\"微博？来分享一波喵！\"]},{\"selector\":\".need-share-button_wechat\",\"text\":[\"分享到微信吧！\"]},{\"selector\":\".need-share-button_douban\",\"text\":[\"分享到豆瓣好像也不错！\"]},{\"selector\":\".need-share-button_qqzone\",\"text\":[\"QQ空间，一键转发，耶～\"]},{\"selector\":\".need-share-button_twitter\",\"text\":[\"Twitter？好像是不存在的东西？\"]},{\"selector\":\".need-share-button_facebook\",\"text\":[\"emmm…FB好像也是不存在的东西？\"]},{\"selector\":\".post-nav-next\",\"text\":[\"来看看下一篇文章吧。\",\"点它可以看下一篇文章哦！\",\"要翻到下一篇文章吗？\"]},{\"selector\":\".post-nav-prev\",\"text\":[\"来看看上一篇文章吧。\",\"点它可以看上一篇文章哦！\",\"要翻到上一篇文章吗？\"]},{\"selector\":\".extend.next\",\"text\":[\"去下一页看看吧。\",\"点它可以前进哦！\",\"要翻到下一页吗？\"]},{\"selector\":\".extend.prev\",\"text\":[\"去上一页看看吧。\",\"点它可以后退哦！\",\"要翻到上一页吗？\"]},{\"selector\":\"input.vnick\",\"text\":[\"该怎么称呼你呢？\",\"留下你的尊姓大名！\"]},{\"selector\":\".vmail\",\"text\":[\"留下你的邮箱，不然就是无头像人士了！\",\"记得设置好 Gravatar 头像哦！\",\"为了方便通知你最新消息，一定要留下邮箱！\"]},{\"selector\":\".vlink\",\"text\":[\"快快告诉我你的家在哪里，好让我去参观参观！\"]},{\"selector\":\".veditor\",\"text\":[\"想要去评论些什么吗？\",\"要说点什么吗？\",\"觉得博客不错？快来留言和主人交流吧！\"]},{\"selector\":\".vcontrol a\",\"text\":[\"你会不会熟练使用Markdown呀？\",\"使用Markdown让评论更美观吧～\"]},{\"selector\":\".vemoji-btn\",\"text\":[\"要插入一个萌萌哒的表情吗？\",\"要来一发表情吗？\"]},{\"selector\":\".vpreview-btn\",\"text\":[\"要预览一下你的发言吗？\",\"快看看你的评论有多少负熵！\"]},{\"selector\":\".vsubmit\",\"text\":[\"评论没有审核，要对自己的发言负责哦～\",\"要提交了吗，请耐心等待回复哦～\"]},{\"selector\":\".vcontent\",\"text\":[\"哇，快看看这个精彩评论！\",\"如果有疑问，请尽快留言哦～\"]}],\"click\":[{\"selector\":\"#waifu #live2d\",\"text\":[\"是…是不小心碰到了吧…\",\"萝莉控是什么呀？\",\"你看到我的小熊了吗？\",\"再摸的话我可要报警了！⌇●﹏●⌇\",\"110吗，这里有个变态一直在摸我(ó﹏ò｡)\",\"不要摸我了，我会告诉老婆来打你的！\",\"干嘛动我呀！小心我咬你！\",\"别摸我，有什么好摸的！\"]},{\"selector\":\".veditor\",\"text\":[\"要吐槽些什么呢？\",\"一定要认真填写喵～\",\"有什么想说的吗？\"]},{\"selector\":\".vsubmit\",\"text\":[\"输入验证码就可以提交评论啦～\"]}],\"seasons\":[{\"date\":\"01/01\",\"text\":\"元旦了呢，新的一年又开始了，今年是{year}年～\"},{\"date\":\"02/14\",\"text\":\"又是一年情人节，{year}年找到对象了嘛～\"},{\"date\":\"03/08\",\"text\":\"今天是国际妇女节！\"},{\"date\":\"03/12\",\"text\":\"今天是植树节，要保护环境呀！\"},{\"date\":\"04/01\",\"text\":\"悄悄告诉你一个秘密～今天是愚人节，不要被骗了哦～\"},{\"date\":\"05/01\",\"text\":\"今天是五一劳动节，计划好假期去哪里了吗～\"},{\"date\":\"06/01\",\"text\":\"儿童节了呢，快活的时光总是短暂，要是永远长不大该多好啊…\"},{\"date\":\"09/03\",\"text\":\"中国人民抗日战争胜利纪念日，铭记历史、缅怀先烈、珍爱和平、开创未来。\"},{\"date\":\"09/10\",\"text\":\"教师节，在学校要给老师问声好呀～\"},{\"date\":\"10/01\",\"text\":\"国庆节到了，为祖国母亲庆生！\"},{\"date\":\"11/05-11/12\",\"text\":\"今年的双十一是和谁一起过的呢～\"},{\"date\":\"12/20-12/31\",\"text\":\"这几天是圣诞节，主人肯定又去剁手买买买了～\"}]}"},{"title":"","date":"2022-03-02T11:47:07.608Z","updated":"2019-12-04T15:56:02.000Z","comments":true,"path":"live2d-widget-master/waifu.css","permalink":"https://dgithubq.github.io/live2d-widget-master/waifu.css","excerpt":"","text":"#waifu-toggle { background-color: #fa0; border-radius: 5px; bottom: 66px; color: #fff; cursor: pointer; font-size: 12px; left: 0; padding: 5px 2px 5px 5px; position: fixed; width: 60px; writing-mode: vertical-rl; } #waifu { bottom: -1000px; left: 0; line-height: 0; position: fixed; transform: translateY(3px); transition: transform .3s ease-in-out; z-index: 1; } #waifu:hover { transform: translateY(0); } @media (max-width: 768px) { #waifu { display: none; } } #waifu-tips { animation: shake 50s ease-in-out 5s infinite; background-color: rgba(236, 217, 188, .5); border: 1px solid rgba(224, 186, 140, .62); border-radius: 12px; box-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2); font-size: 14px; line-height: 24px; margin: -30px 20px; min-height: 70px; opacity: 0; overflow: hidden; padding: 5px 10px; position: absolute; text-overflow: ellipsis; width: 250px; word-break: break-all; } #waifu #live2d { cursor: grab; cursor: -webkit-grab; cursor: -o-grab; cursor: -ms-grab; position: relative; } #waifu #live2d:active { cursor: grabbing; cursor: -webkit-grabbing; cursor: -o-grabbing; cursor: -ms-grabbing; } #waifu-tool { color: #aaa; opacity: 0; position: absolute; right: -10px; top: 70px; transition: opacity 1s; } #waifu:hover #waifu-tool { opacity: 1; } #waifu-tool span { color: #5b6c7d; cursor: pointer; display: block; line-height: 30px; text-align: center; transition: color .3s; } #waifu-tool span:hover { color: #0684bd; /* #34495e */ } @keyframes shake { 2% { transform: translate(.5px, -1.5px) rotate(-.5deg); } 4% { transform: translate(.5px, 1.5px) rotate(1.5deg); } 6% { transform: translate(1.5px, 1.5px) rotate(1.5deg); } 8% { transform: translate(2.5px, 1.5px) rotate(.5deg); } 10% { transform: translate(.5px, 2.5px) rotate(.5deg); } 12% { transform: translate(1.5px, 1.5px) rotate(.5deg); } 14% { transform: translate(.5px, .5px) rotate(.5deg); } 16% { transform: translate(-1.5px, -.5px) rotate(1.5deg); } 18% { transform: translate(.5px, .5px) rotate(1.5deg); } 20% { transform: translate(2.5px, 2.5px) rotate(1.5deg); } 22% { transform: translate(.5px, -1.5px) rotate(1.5deg); } 24% { transform: translate(-1.5px, 1.5px) rotate(-.5deg); } 26% { transform: translate(1.5px, .5px) rotate(1.5deg); } 28% { transform: translate(-.5px, -.5px) rotate(-.5deg); } 30% { transform: translate(1.5px, -.5px) rotate(-.5deg); } 32% { transform: translate(2.5px, -1.5px) rotate(1.5deg); } 34% { transform: translate(2.5px, 2.5px) rotate(-.5deg); } 36% { transform: translate(.5px, -1.5px) rotate(.5deg); } 38% { transform: translate(2.5px, -.5px) rotate(-.5deg); } 40% { transform: translate(-.5px, 2.5px) rotate(.5deg); } 42% { transform: translate(-1.5px, 2.5px) rotate(.5deg); } 44% { transform: translate(-1.5px, 1.5px) rotate(.5deg); } 46% { transform: translate(1.5px, -.5px) rotate(-.5deg); } 48% { transform: translate(2.5px, -.5px) rotate(.5deg); } 50% { transform: translate(-1.5px, 1.5px) rotate(.5deg); } 52% { transform: translate(-.5px, 1.5px) rotate(.5deg); } 54% { transform: translate(-1.5px, 1.5px) rotate(.5deg); } 56% { transform: translate(.5px, 2.5px) rotate(1.5deg); } 58% { transform: translate(2.5px, 2.5px) rotate(.5deg); } 60% { transform: translate(2.5px, -1.5px) rotate(1.5deg); } 62% { transform: translate(-1.5px, .5px) rotate(1.5deg); } 64% { transform: translate(-1.5px, 1.5px) rotate(1.5deg); } 66% { transform: translate(.5px, 2.5px) rotate(1.5deg); } 68% { transform: translate(2.5px, -1.5px) rotate(1.5deg); } 70% { transform: translate(2.5px, 2.5px) rotate(.5deg); } 72% { transform: translate(-.5px, -1.5px) rotate(1.5deg); } 74% { transform: translate(-1.5px, 2.5px) rotate(1.5deg); } 76% { transform: translate(-1.5px, 2.5px) rotate(1.5deg); } 78% { transform: translate(-1.5px, 2.5px) rotate(.5deg); } 80% { transform: translate(-1.5px, .5px) rotate(-.5deg); } 82% { transform: translate(-1.5px, .5px) rotate(-.5deg); } 84% { transform: translate(-.5px, .5px) rotate(1.5deg); } 86% { transform: translate(2.5px, 1.5px) rotate(.5deg); } 88% { transform: translate(-1.5px, .5px) rotate(1.5deg); } 90% { transform: translate(-1.5px, -.5px) rotate(-.5deg); } 92% { transform: translate(-1.5px, -1.5px) rotate(1.5deg); } 94% { transform: translate(.5px, .5px) rotate(-.5deg); } 96% { transform: translate(2.5px, -.5px) rotate(-.5deg); } 98% { transform: translate(-1.5px, -1.5px) rotate(-.5deg); } 0%, 100% { transform: translate(0, 0) rotate(0); } }"},{"title":"","date":"2022-03-02T11:47:07.607Z","updated":"2019-12-04T15:56:02.000Z","comments":true,"path":"live2d-widget-master/waifu-tips.js","permalink":"https://dgithubq.github.io/live2d-widget-master/waifu-tips.js","excerpt":"","text":"/* * https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02 * https://www.fghrsh.net/post/123.html */ function loadWidget(waifuPath, apiPath) { localStorage.removeItem(\"waifu-display\"); sessionStorage.removeItem(\"waifu-text\"); document.body.insertAdjacentHTML('beforeend', ` `); $(\"#waifu\").show().animate({ bottom: 0 }, 3000); function registerEventListener() { document.querySelector(\"#waifu-tool .fa-comment\").addEventListener(\"click\", showHitokoto); document.querySelector(\"#waifu-tool .fa-paper-plane\").addEventListener(\"click\", () =&gt; { if (window.Asteroids) { if (!window.ASTEROIDSPLAYERS) window.ASTEROIDSPLAYERS = []; window.ASTEROIDSPLAYERS.push(new Asteroids()); } else { $.ajax({ url: \"https://cdn.jsdelivr.net/gh/GalaxyMimi/CDN/asteroids.js\", dataType: \"script\", cache: true }); } }); document.querySelector(\"#waifu-tool .fa-user-circle\").addEventListener(\"click\", loadOtherModel); document.querySelector(\"#waifu-tool .fa-street-view\").addEventListener(\"click\", loadRandModel); document.querySelector(\"#waifu-tool .fa-camera-retro\").addEventListener(\"click\", () =&gt; { showMessage(\"照好了嘛，是不是很可爱呢？\", 6000, 9); Live2D.captureName = \"photo.png\"; Live2D.captureFrame = true; }); document.querySelector(\"#waifu-tool .fa-info-circle\").addEventListener(\"click\", () =&gt; { open(\"https://github.com/stevenjoezhang/live2d-widget\"); }); document.querySelector(\"#waifu-tool .fa-times\").addEventListener(\"click\", () =&gt; { localStorage.setItem(\"waifu-display\", Date.now()); showMessage(\"愿你有一天能与重要的人重逢。\", 2000, 11); $(\"#waifu\").animate({ bottom: -500 }, 3000, () =&gt; { $(\"#waifu\").hide(); $(\"#waifu-toggle\").show().animate({ \"margin-left\": -50 }, 1000); }); }); var re = /x/; console.log(re); re.toString = () =&gt; { showMessage(\"哈哈，你打开了控制台，是想要看看我的小秘密吗？\", 6000, 9); return \"\"; }; window.addEventListener(\"copy\", () =&gt; { showMessage(\"你都复制了些什么呀，转载要记得加上出处哦！\", 6000, 9); }); window.addEventListener(\"visibilitychange\", () =&gt; { if (!document.hidden) showMessage(\"哇，你终于回来了～\", 6000, 9); }); } registerEventListener(); function welcomeMessage() { var SiteIndexUrl = `${location.protocol}//${location.host}/`, text; //自动获取主页 if (location.href == SiteIndexUrl) { //如果是主页 var now = new Date().getHours(); if (now &gt; 5 &amp;&amp; now &lt;= 7) text = \"早上好！一日之计在于晨，美好的一天就要开始了。\"; else if (now &gt; 7 &amp;&amp; now &lt;= 11) text = \"上午好！工作顺利嘛，不要久坐，多起来走动走动哦！\"; else if (now &gt; 11 &amp;&amp; now &lt;= 14) text = \"中午了，工作了一个上午，现在是午餐时间！\"; else if (now &gt; 14 &amp;&amp; now &lt;= 17) text = \"午后很容易犯困呢，今天的运动目标完成了吗？\"; else if (now &gt; 17 &amp;&amp; now &lt;= 19) text = \"傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红～\"; else if (now &gt; 19 &amp;&amp; now &lt;= 21) text = \"晚上好，今天过得怎么样？\"; else if (now &gt; 21 &amp;&amp; now &lt;= 23) text = [\"已经这么晚了呀，早点休息吧，晚安～\", \"深夜时要爱护眼睛呀！\"]; else text = \"你是夜猫子呀？这么晚还不睡觉，明天起的来嘛？\"; } else if (document.referrer !== \"\") { var referrer = document.createElement(\"a\"); referrer.href = document.referrer; var domain = referrer.hostname.split(\".\")[1]; if (location.hostname == referrer.hostname) text = `欢迎阅读『${document.title.split(\" - \")[0]}』`; else if (domain == \"baidu\") text = `Hello！来自 百度搜索 的朋友你是搜索 ${referrer.search.split(\"&amp;wd=\")[1].split(\"&amp;\")[0]} 找到的我吗？`; else if (domain == \"so\") text = `Hello！来自 360搜索 的朋友你是搜索 ${referrer.search.split(\"&amp;q=\")[1].split(\"&amp;\")[0]} 找到的我吗？`; else if (domain == \"google\") text = `Hello！来自 谷歌搜索 的朋友欢迎阅读『${document.title.split(\" - \")[0]}』`; else text = `Hello！来自 ${referrer.hostname} 的朋友`; } else { text = `欢迎阅读『${document.title.split(\" - \")[0]}』`; } showMessage(text, 7000, 8); } welcomeMessage(); //检测用户活动状态，并在空闲时定时显示一言 var userAction = false, hitokotoTimer = null, messageTimer = null, messageArray = [\"好久不见，日子过得好快呢……\", \"大坏蛋！你都多久没理人家了呀，嘤嘤嘤～\", \"嗨～快来逗我玩吧！\", \"拿小拳拳锤你胸口！\"]; if ($(\".fa-share-alt\").is(\":hidden\")) messageArray.push(\"记得把小家加入 Adblock 白名单哦！\"); $(document).mousemove(() =&gt; { userAction = true; }).keydown(() =&gt; { userAction = true; }); setInterval(() =&gt; { if (!userAction) { if (!hitokotoTimer) hitokotoTimer = setInterval(showHitokoto, 25000); } else { userAction = false; clearInterval(hitokotoTimer); hitokotoTimer = null; } }, 1000); function showHitokoto() { //增加 hitokoto.cn 的 API if (Math.random() &lt; 0.6 &amp;&amp; messageArray.length &gt; 0) showMessage(messageArray[Math.floor(Math.random() * messageArray.length)], 6000, 9); else fetch(\"https://v1.hitokoto.cn\") .then(response =&gt; response.json()) .then(result =&gt; { var text = `这句一言来自 『${result.from}』，是 ${result.creator} 在 hitokoto.cn 投稿的。`; showMessage(result.hitokoto, 6000, 9); setTimeout(() =&gt; { showMessage(text, 4000, 9); }, 6000); }); } function showMessage(text, timeout, priority) { if (!text) return; if (!sessionStorage.getItem(\"waifu-text\") || sessionStorage.getItem(\"waifu-text\") &lt;= priority) { if (messageTimer) { clearTimeout(messageTimer); messageTimer = null; } if (Array.isArray(text)) text = text[Math.floor(Math.random() * text.length)]; sessionStorage.setItem(\"waifu-text\", priority); $(\"#waifu-tips\").stop().html(text).fadeTo(200, 1); messageTimer = setTimeout(() =&gt; { sessionStorage.removeItem(\"waifu-text\"); $(\"#waifu-tips\").fadeTo(1000, 0); }, timeout); } } function initModel() { var modelId = localStorage.getItem(\"modelId\"), modelTexturesId = localStorage.getItem(\"modelTexturesId\"); if (modelId == null) { //首次访问加载 指定模型 的 指定材质 var modelId = 1, //模型 ID modelTexturesId = 53; //材质 ID } loadModel(modelId, modelTexturesId); fetch(waifuPath) .then(response =&gt; response.json()) .then(result =&gt; { result.mouseover.forEach(tips =&gt; { window.addEventListener(\"mouseover\", event =&gt; { if (!event.target.matches(tips.selector)) return; var text = Array.isArray(tips.text) ? tips.text[Math.floor(Math.random() * tips.text.length)] : tips.text; text = text.replace(\"{text}\", event.target.innerText); showMessage(text, 4000, 8); }); }); result.click.forEach(tips =&gt; { window.addEventListener(\"click\", event =&gt; { if (!event.target.matches(tips.selector)) return; var text = Array.isArray(tips.text) ? tips.text[Math.floor(Math.random() * tips.text.length)] : tips.text; text = text.replace(\"{text}\", event.target.innerText); showMessage(text, 4000, 8); }); }); result.seasons.forEach(tips =&gt; { var now = new Date(), after = tips.date.split(\"-\")[0], before = tips.date.split(\"-\")[1] || after; if ((after.split(\"/\")[0] &lt;= now.getMonth() + 1 &amp;&amp; now.getMonth() + 1 &lt;= before.split(\"/\")[0]) &amp;&amp; (after.split(\"/\")[1] &lt;= now.getDate() &amp;&amp; now.getDate() &lt;= before.split(\"/\")[1])) { var text = Array.isArray(tips.text) ? tips.text[Math.floor(Math.random() * tips.text.length)] : tips.text; text = text.replace(\"{year}\", now.getFullYear()); //showMessage(text, 7000, true); messageArray.push(text); } }); }); } initModel(); function loadModel(modelId, modelTexturesId) { localStorage.setItem(\"modelId\", modelId); if (modelTexturesId === undefined) modelTexturesId = 0; localStorage.setItem(\"modelTexturesId\", modelTexturesId); loadlive2d(\"live2d\", `${apiPath}/get/?id=${modelId}-${modelTexturesId}`, console.log(`Live2D 模型 ${modelId}-${modelTexturesId} 加载完成`)); } function loadRandModel() { var modelId = localStorage.getItem(\"modelId\"), modelTexturesId = localStorage.getItem(\"modelTexturesId\"); //可选 \"rand\"(随机), \"switch\"(顺序) fetch(`${apiPath}/rand_textures/?id=${modelId}-${modelTexturesId}`) .then(response =&gt; response.json()) .then(result =&gt; { if (result.textures[\"id\"] == 1 &amp;&amp; (modelTexturesId == 1 || modelTexturesId == 0)) showMessage(\"我还没有其他衣服呢！\", 4000, 10); else showMessage(\"我的新衣服好看嘛？\", 4000, 10); loadModel(modelId, result.textures[\"id\"]); }); } function loadOtherModel() { var modelId = localStorage.getItem(\"modelId\"); fetch(`${apiPath}/switch/?id=${modelId}`) .then(response =&gt; response.json()) .then(result =&gt; { loadModel(result.model[\"id\"]); showMessage(result.model[\"message\"], 4000, 10); }); } } function initWidget(waifuPath = \"/waifu-tips.json\", apiPath = \"\") { if (screen.width &lt;= 768) return; document.body.insertAdjacentHTML('beforeend', ` 看板娘 `); $(\"#waifu-toggle\").hover(() =&gt; { $(\"#waifu-toggle\").animate({ \"margin-left\": -30 }, 500); }, () =&gt; { $(\"#waifu-toggle\").animate({ \"margin-left\": -50 }, 500); }).click(() =&gt; { $(\"#waifu-toggle\").animate({ \"margin-left\": -100 }, 1000, () =&gt; { $(\"#waifu-toggle\").hide(); }); if ($(\"#waifu-toggle\").attr(\"first-time\")) { loadWidget(waifuPath, apiPath); $(\"#waifu-toggle\").attr(\"first-time\", false); } else { localStorage.removeItem(\"waifu-display\"); $(\"#waifu\").show().animate({ bottom: 0 }, 3000); } }); if (localStorage.getItem(\"waifu-display\") &amp;&amp; Date.now() - localStorage.getItem(\"waifu-display\") &lt;= 86400000) { $(\"#waifu-toggle\").attr(\"first-time\", true).css({ \"margin-left\": -50 }); } else { loadWidget(waifuPath, apiPath); } }"},{"title":"","date":"2022-03-02T11:47:07.607Z","updated":"2019-12-04T15:56:02.000Z","comments":true,"path":"live2d-widget-master/live2d.min.js","permalink":"https://dgithubq.github.io/live2d-widget-master/live2d.min.js","excerpt":"","text":"!function(t){function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var e={};i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},i.n=function(t){var e=t&amp;&amp;t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p=\"\",i(i.s=4)}([function(t,i,e){\"use strict\";function r(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new h,this.expressionManager=new h,this.motions={},this.expressions={},this.isTexLoaded=!1}function o(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function n(){this.id=\"\",this.type=-1,this.value=null}function s(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=g.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L=\"PARAM_EYE_L_OPEN\",this.eyeID_R=\"PARAM_EYE_R_OPEN\"}function _(){this.tr=new Float32Array(16),this.identity()}function a(t,i){_.prototype.constructor.call(this),this.width=t,this.height=i}function h(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this.super=MotionQueueManager.prototype}function l(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function $(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function u(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function p(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function f(){_.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function c(){}var d=0;r.prototype.getModelMatrix=function(){return this.modelMatrix},r.prototype.setAlpha=function(t){t&gt;.999&amp;&amp;(t=1),t&lt;.001&amp;&amp;(t=0),this.alpha=t},r.prototype.getAlpha=function(){return this.alpha},r.prototype.isInitialized=function(){return this.initialized},r.prototype.setInitialized=function(t){this.initialized=t},r.prototype.isUpdating=function(){return this.updating},r.prototype.setUpdating=function(t){this.updating=t},r.prototype.getLive2DModel=function(){return this.live2DModel},r.prototype.setLipSync=function(t){this.lipSync=t},r.prototype.setLipSyncValue=function(t){this.lipSyncValue=t},r.prototype.setAccel=function(t,i,e){this.accelX=t,this.accelY=i,this.accelZ=e},r.prototype.setDrag=function(t,i){this.dragX=t,this.dragY=i},r.prototype.getMainMotionManager=function(){return this.mainMotionManager},r.prototype.getExpressionManager=function(){return this.expressionManager},r.prototype.loadModelData=function(t,i){var e=c.getPlatformManager();this.debugMode&amp;&amp;e.log(\"Load model : \"+t);var r=this;e.loadLive2DModel(t,function(t){if(r.live2DModel=t,r.live2DModel.saveParam(),0!=Live2D.getError())return void console.error(\"Error : Failed to loadModelData().\");r.modelMatrix=new a(r.live2DModel.getCanvasWidth(),r.live2DModel.getCanvasHeight()),r.modelMatrix.setWidth(2),r.modelMatrix.setCenterPosition(0,0),i(r.live2DModel)})},r.prototype.loadTexture=function(t,i,e){d++;var r=c.getPlatformManager();this.debugMode&amp;&amp;r.log(\"Load Texture : \"+i);var o=this;r.loadTexture(this.live2DModel,t,i,function(){d--,0==d&amp;&amp;(o.isTexLoaded=!0),\"function\"==typeof e&amp;&amp;e()})},r.prototype.loadMotion=function(t,i,e){var r=c.getPlatformManager();this.debugMode&amp;&amp;r.log(\"Load Motion : \"+i);var o=null,n=this;r.loadBytes(i,function(i){o=Live2DMotion.loadMotion(i),null!=t&amp;&amp;(n.motions[t]=o),e(o)})},r.prototype.loadExpression=function(t,i,e){var r=c.getPlatformManager();this.debugMode&amp;&amp;r.log(\"Load Expression : \"+i);var n=this;r.loadBytes(i,function(i){null!=t&amp;&amp;(n.expressions[t]=o.loadJson(i)),\"function\"==typeof e&amp;&amp;e()})},r.prototype.loadPose=function(t,i){var e=c.getPlatformManager();this.debugMode&amp;&amp;e.log(\"Load Pose : \"+t);var r=this;try{e.loadBytes(t,function(t){r.pose=$.load(t),\"function\"==typeof i&amp;&amp;i()})}catch(t){console.warn(t)}},r.prototype.loadPhysics=function(t){var i=c.getPlatformManager();this.debugMode&amp;&amp;i.log(\"Load Physics : \"+t);var e=this;try{i.loadBytes(t,function(t){e.physics=l.load(t)})}catch(t){console.warn(t)}},r.prototype.hitTestSimple=function(t,i,e){if(null===this.live2DModel)return!1;var r=this.live2DModel.getDrawDataIndex(t);if(r&lt;0)return!1;for(var o=this.live2DModel.getTransformedPoints(r),n=this.live2DModel.getCanvasWidth(),s=0,_=this.live2DModel.getCanvasHeight(),a=0,h=0;hs&amp;&amp;(s=l),$&lt;_&amp;&amp;(_=$),$&gt;a&amp;&amp;(a=$)}var u=this.modelMatrix.invertTransformX(i),p=this.modelMatrix.invertTransformY(e);return n&lt;=u&amp;&amp;u&lt;=s&amp;&amp;_&lt;=p&amp;&amp;p&lt;=a},r.prototype.hitTestSimpleCustom=function(t,i,e,r){return null!==this.live2DModel&amp;&amp;(e&gt;=t[0]&amp;&amp;e&lt;=i[0]&amp;&amp;r&lt;=t[1]&amp;&amp;r&gt;=i[1])},o.prototype=new AMotion,o.EXPRESSION_DEFAULT=\"DEFAULT\",o.TYPE_SET=0,o.TYPE_ADD=1,o.TYPE_MULT=2,o.loadJson=function(t){var i=new o,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t);if(i.setFadeIn(parseInt(r.fade_in)&gt;0?parseInt(r.fade_in):1e3),i.setFadeOut(parseInt(r.fade_out)&gt;0?parseInt(r.fade_out):1e3),null==r.params)return i;var s=r.params,_=s.length;i.paramList=[];for(var a=0;a&lt;_;a++){var h=s[a],l=h.id.toString(),$=parseFloat(h.val),u=o.TYPE_ADD,p=null!=h.calc?h.calc.toString():\"add\";if((u=\"add\"===p?o.TYPE_ADD:\"mult\"===p?o.TYPE_MULT:\"set\"===p?o.TYPE_SET:o.TYPE_ADD)==o.TYPE_ADD){var f=null==h.def?0:parseFloat(h.def);$-=f}else if(u==o.TYPE_MULT){var f=null==h.def?1:parseFloat(h.def);0==f&amp;&amp;(f=1),$/=f}var d=new n;d.id=l,d.type=u,d.value=$,i.paramList.push(d)}return i},o.prototype.updateParamExe=function(t,i,e,r){for(var n=this.paramList.length-1;n&gt;=0;--n){var s=this.paramList[n];s.type==o.TYPE_ADD?t.addToParamFloat(s.id,s.value,e):s.type==o.TYPE_MULT?t.multParamFloat(s.id,s.value,e):s.type==o.TYPE_SET&amp;&amp;t.setParamFloat(s.id,s.value,e)}},s.prototype.calcNextBlink=function(){return UtSystem.getUserTimeMSec()+Math.random()*(2*this.blinkIntervalMsec-1)},s.prototype.setInterval=function(t){this.blinkIntervalMsec=t},s.prototype.setEyeMotion=function(t,i,e){this.closingMotionMsec=t,this.closedMotionMsec=i,this.openingMotionMsec=e},s.prototype.updateParam=function(t){var i,e=UtSystem.getUserTimeMSec(),r=0;switch(this.eyeState){case g.STATE_CLOSING:r=(e-this.stateStartTime)/this.closingMotionMsec,r&gt;=1&amp;&amp;(r=1,this.eyeState=g.STATE_CLOSED,this.stateStartTime=e),i=1-r;break;case g.STATE_CLOSED:r=(e-this.stateStartTime)/this.closedMotionMsec,r&gt;=1&amp;&amp;(this.eyeState=g.STATE_OPENING,this.stateStartTime=e),i=0;break;case g.STATE_OPENING:r=(e-this.stateStartTime)/this.openingMotionMsec,r&gt;=1&amp;&amp;(r=1,this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink()),i=r;break;case g.STATE_INTERVAL:this.nextBlinkTime=t)&amp;&amp;(!(this.currentPriority&gt;=t)&amp;&amp;(this.reservePriority=t,!0))},h.prototype.setReservePriority=function(t){this.reservePriority=t},h.prototype.updateParam=function(t){var i=MotionQueueManager.prototype.updateParam.call(this,t);return this.isFinished()&amp;&amp;(this.currentPriority=0),i},h.prototype.startMotionPrio=function(t,i){return i==this.reservePriority&amp;&amp;(this.reservePriority=0),this.currentPriority=i,this.startMotion(t,!1)},l.load=function(t){for(var i=new l,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.physics_hair,n=o.length,s=0;s"},{"title":"标签","date":"2020-11-24T07:14:39.000Z","updated":"2021-07-26T14:44:42.337Z","comments":false,"path":"tags/index.html","permalink":"https://dgithubq.github.io/tags/index.html","excerpt":"","text":""},{"title":"相册","date":"2022-03-03T12:47:39.022Z","updated":"2021-10-14T02:13:24.113Z","comments":false,"path":"List/gallery/index.html","permalink":"https://dgithubq.github.io/List/gallery/index.html","excerpt":"","text":"壁紙 世俗的欲望 OH MY GIRL 關於OH MY GIRL的圖片"},{"title":"","date":"2022-03-05T08:41:10.000Z","updated":"2022-03-05T06:37:51.337Z","comments":false,"path":"List/movies/index.html","permalink":"https://dgithubq.github.io/List/movies/index.html","excerpt":"","text":"励志视频"},{"title":"Music-BBOX","date":"2020-04-23T04:58:56.000Z","updated":"2021-07-26T07:32:21.052Z","comments":false,"path":"List/music/index.html","permalink":"https://dgithubq.github.io/List/music/index.html","excerpt":"","text":""},{"title":"","date":"2022-03-02T11:47:07.605Z","updated":"2019-12-04T15:56:02.000Z","comments":true,"path":"live2d-widget-master/demo/demo1.html","permalink":"https://dgithubq.github.io/live2d-widget-master/demo/demo1.html","excerpt":"","text":""},{"title":"","date":"2022-03-02T11:47:07.605Z","updated":"2019-12-04T15:56:02.000Z","comments":true,"path":"live2d-widget-master/demo/demo2.html","permalink":"https://dgithubq.github.io/live2d-widget-master/demo/demo2.html","excerpt":"","text":"MIMIPOWERED 看板娘登陆平台 用户名 密码 记住我 登录 Copyleft © Mimi 2019 $(function() { \"use strict\"; if (!CSS.supports(\"clip-path\", \"circle(120px at center)\") && !CSS.supports(\"-webkit-clip-path\", \"circle(120px at center)\")) { $(\"#stage\").html(''); return; } var apiURL = \"https://live2d.fghrsh.net/api\", state = 0, modelId = localStorage.getItem(\"modelId\"), modelTexturesId = localStorage.getItem(\"modelTexturesId\"); if (modelId == null) { modelId = 1; modelTexturesId = 53; } loadModel(modelId, modelTexturesId); function loadModel(modelId, modelTexturesId) { localStorage.setItem(\"modelId\", modelId); if (modelTexturesId === undefined) modelTexturesId = 0; localStorage.setItem(\"modelTexturesId\", modelTexturesId); loadlive2d(\"live2d\", `${apiURL}/get/?id=${modelId}-${modelTexturesId}`, null); console.log(\"live2d\", `模型 ${modelId}-${modelTexturesId} 加载完成`); setTimeout(function() { $(\"#cover\").css(\"bottom\", \"80%\"); state = 2; }, 2000); } function loadRandModel() { var modelId = localStorage.getItem(\"modelId\"), modelTexturesId = localStorage.getItem(\"modelTexturesId\"); $.ajax({ cache: false, url: `${apiURL}/rand_textures/?id=${modelId}-${modelTexturesId}`, dataType: \"json\", success: function(result) { loadModel(modelId, result.textures[\"id\"]); setTimeout(function() { state = 2; $(\"#cover\").css(\"bottom\", \"80%\"); $(\"#refresh\").attr(\"href\", \"javascript:refresh()\"); }, 1000); } }); } function loadOtherModel() { var modelId = localStorage.getItem(\"modelId\"); $.ajax({ cache: false, url: `${apiURL}/switch/?id=${modelId}`, dataType: \"json\", success: function(result) { loadModel(result.model[\"id\"]); } }); } window.info = function() { //Your code here... $.getJSON(\"https://v1.hitokoto.cn/\", function(data) { alert(\"『\" + data.hitokoto + \"』——\" + data.from); }); } window.refresh = function() { state = 0; $(\"#cover\").css(\"bottom\", \"10%\"); $(\"#refresh\").attr(\"href\", \"javascript:void(0)\"); setTimeout(loadRandModel, 1000); } $(\"#handle\").click(function() { if (state == 1) { state = 2; $(\"#cover\").css(\"bottom\", \"80%\"); } else if (state == 2) { state = 1; $(\"#cover\").css(\"bottom\", \"20%\"); } }); $(\"input[type=password]\").focus(function() { if (state == 2) { state = 1; $(\"#cover\").css(\"bottom\", \"20%\"); } }).blur(function() { if (state == 1) { state = 2; $(\"#cover\").css(\"bottom\", \"80%\"); } }); });"},{"title":"","date":"2021-09-28T14:56:14.000Z","updated":"2022-03-04T13:03:42.262Z","comments":false,"path":"List/gallery/ohmygirl/index.html","permalink":"https://dgithubq.github.io/List/gallery/ohmygirl/index.html","excerpt":"","text":""},{"title":"","date":"2021-09-28T14:56:13.000Z","updated":"2021-10-14T02:11:35.135Z","comments":false,"path":"List/gallery/wallpaper/index.html","permalink":"https://dgithubq.github.io/List/gallery/wallpaper/index.html","excerpt":"","text":""}],"posts":[{"title":"Java流","slug":"09-节点流和处理流","date":"2022-04-03T02:30:00.000Z","updated":"2022-04-03T02:31:19.630Z","comments":false,"path":"posts/9.html","link":"","permalink":"https://dgithubq.github.io/posts/9.html","excerpt":"","text":"节点流和处理流节点流和处理流的区别和联系 节点流是底层流，直接和数据源相连接 处理流包装节点流，既可以消除不同节点流的实现差异，也可以提供更方便的方法来完成输入输出 处理流对节点流进行包装，使用了修饰器设计模式，不会直接与数据源相连 处理流的功能主要体现 性能的提高：主要以增加缓冲的方式提高输入输出的效率 操作的便捷：处理流可能提供了一系列便捷的方法来一次输入输出大批量的数据，使用更加方便灵活","categories":[{"name":"技术 学习 java","slug":"技术-学习-java","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0-java/"}],"tags":[{"name":"技术 操作 学习 java流","slug":"技术-操作-学习-java流","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-java%E6%B5%81/"}]},{"title":"Java内部类","slug":"08-内部类","date":"2022-03-24T03:14:00.000Z","updated":"2022-03-24T03:18:45.652Z","comments":false,"path":"posts/8.html","link":"","permalink":"https://dgithubq.github.io/posts/8.html","excerpt":"","text":"内部类内部类简介一个类里面包含了一个类结构，这个内部类可以直接访问私有属性，内部类是类的第五大成员（属性、方法、构造器、代码块、内部类） 内部类的使用某个接口或者一个抽象方法只需要用一次的时候，就可以用到内部类。 使用内部类最吸引人的原因是：每个内部类都能独立地继承一个（接口的）实现，所以无论外围类是否已经继承了某个（接口的）实现，对于内部类都没有影响。——《Think in java》也就是说内部类拥有类的基本特征。(可以继承父类，实现接口)在实际问题中我们会遇到一些接口无法解决或难以解决的问题，此时我们可以使用内部类继承某个具体的或抽象的类，间接解决类无法多继承引起的一系列问题。 （注：内部类可以嵌套内部类，但是这极大的破坏了代码的结构，不推荐使用。） 内部类的优点 内部类可以用多个实例，每个实例都有自己的状态信息，并且与其他外围对象的信息相互独立 内部类并没有令人迷惑的“is-a”关系，他就是一个独立的实体。 内部类提供了更好的封装，除了该外围类，其他类都不能访问。 创建内部类对象的时刻并不依赖于外围类对象的创建。具体来说，内部类信息（属性、方法）可以和外部类重名；内部类是具有类的基本特征的独立实体；可以利用访问修饰符隐藏内部类的实施细节，提供了更好的封装；静态内部类使用时可直接使用，不需先创造外部类。 内部类分类定义在外部类局部位置上（方法里）： 局部内部类（有类名） 匿名内部类（无类名） 定义在外部类的成员位置上： 成员内部类（没用static修饰） 静态内部类（使用static修饰） 局部内部类定义在外部类的局部位置，有类名。 可以直接访问外部类的所有成员，包括私有的 不能添加访问修饰符，因为它的位置是一个局部变量，局部变量不能用修饰符的，但是可以用final修饰，因为局部变量也可以用final。 作用域：仅仅在定义它的方法或者代码块里。 局部内部类访问直接访问外部类的成员 外部类访问局部内部类，要先创建对象（在外部类里创建内部类的对象，在main方法创建外部类对象，用外部类对象调用内部类的代码块或者定义它的方法），再访问，而且必须在作用域内。 外部其他类不能访问局部内部类（因为局部内部类地位是一个局部变量） 如果外部类和局部内部类的成员重名时，默认遵循就近原则，如果想要访问外部类的成员，可以使用（外部类名.this.成员）去访问 System.out.println(\"外部类的n2=\" + 外部类名.this.n2); 匿名内部类 匿名内部类申明的地点和局部内部类一样，都是在方法或者代码块中，地位都等价于局部变量，因此在局部内部类中的限制在匿名内部类中一样适用 匿名内部类也可以直接访问外部类的所有成员，包括私有的 不能添加任何的访问修饰符 作用域：在整个方法或者代码块 可以直接访问外部类的成员 外部类访问匿名内部类，要先创建对象（在外部类里创建内部类的对象，在main方法创建外部类对象，用外部类对象调用内部类的代码块或者定义它的方法），再访问，而且必须在作用域内。 外部其他类不能访问局部内部类（因为局部内部类地位是一个局部变量） 如果外部类和局部内部类的成员重名时，默认遵循就近原则，如果想要访问外部类的成员，可以使用（外部类名.this.成员）去访问 匿名内部类的使用 被当做实参，直接传递 public static void main(String[] args) { f1(new IL(){ public void show(){ System.out.println(\"xxx\"); } }); } public static void f1(IL il){ il.show(); } interface IL{ public void show(); } 成员内部类 可以用任何的修饰符 内部类的内部不能有静态信息 内部类也是类，可以继承，可重写，可以重载，this 和 super 可以使用。 内部类可以直接使用外部类的任何信息 其它类如何访问内部类： Outer outer = new Outer(); //创造内部类对象 Outer.Inner inner = outer.new Inner(); inner.innerShow(); 成员内部类认为是外部类的成员信息。 静态内部类静态内部类是内部类中一个比较特殊的情况，Java 文档中是这样描述静态内部类的：一旦内部类使用 static 修饰，那么此时这个内部类就升级为顶级类。也就是说，除了写在一个类的内部以外，静态内部类具备所有外部类的特性。 静态内部类也是定义在外部类的成员位置上，而且有static修饰。 可以直接访问外部类所有的静态成员，包括私有的，但是不能访问非静态成员。 可以添加任何的修饰符。 作用域：和成员内部类一样，作用整个类体 静态内部类访问外部类静态成员：直接用 外部类访问静态内部类：创建对象，再访问 其他类访问静态内部类：利用 外部类.内部类 引用 = new 外部类.内部类(); 然后利用 引用.成员信息(属性、方法) 调用。 外部类和内部类成员同名，遵循就近原则，如要访问外部类成员，则使用（外部类.成员）访问。","categories":[{"name":"技术 学习 java","slug":"技术-学习-java","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0-java/"}],"tags":[{"name":"技术 操作 学习 java内部类","slug":"技术-操作-学习-java内部类","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-java%E5%86%85%E9%83%A8%E7%B1%BB/"}]},{"title":"Java方法的调用","slug":"07-java方法的调用细节","date":"2022-03-20T13:37:00.000Z","updated":"2022-03-20T13:41:51.762Z","comments":false,"path":"posts/7.html","link":"","permalink":"https://dgithubq.github.io/posts/7.html","excerpt":"","text":"方法调用的细节同类中方法对方法的调用同类中非静态方法调用同类的其他方法，可以直接方法名调用 静态方法不能访问非静态成员（变量和方法） 不同类之间方法的调用在外部调用静态方法时，可以使用”类名.方法名”的方式，也可以使用”对象名.方法名”的方式。 实例方法只有“对象名.方法名”这种方式。也就是说，调用静态方法可以无需创建对象。（即创建需要调用的方法的类的对象，然后用对象调用） class A{ public void pa(){} } class B{ A a1 = new A(); public void b(){ a.pa(); } } 传参机制java中，基本数据类型传参，是按值拷贝，形参不会影响实参。 引用类型传参是按照地址传参，形参会影响实参。","categories":[{"name":"技术 学习 java","slug":"技术-学习-java","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0-java/"}],"tags":[{"name":"技术 操作 学习 javaI方法","slug":"技术-操作-学习-javaI方法","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-javaI%E6%96%B9%E6%B3%95/"}]},{"title":"JavaIO流入门","slug":"06-IO流","date":"2022-03-09T13:00:00.000Z","updated":"2022-03-09T12:56:27.497Z","comments":false,"path":"posts/6.html","link":"","permalink":"https://dgithubq.github.io/posts/6.html","excerpt":"","text":"IO流（文件）文件文件是保存数据的地方 文件流文件在程序中是以流的形式来操作的 流：数据在数据源(文件)和程序(内存)直接经历的路径 输入流：数据从数据源(文件)到程序(内存)的路径 输出流：数据从程序(内存)到数据源(文件)的路径 常用的文件操作创建文件对象相关构造器和方法 相关方法： new File(String pathname)//根据路径构建一个File对象 new File(File parent,String child)//根据父目录文件+子路径构建 new File(String parent,String child)//根据父目录+子路径构建 createNewFile //创建新文件 获取文件的相关信息 获取文件名字：file.getName() 获取文件绝对路径：file.getAbsolutePath() 获取文件父目录：file.getParent() 文件大小(按字节统计)：file.length() 判断文件是否存在：file.exists() 判断是否是一个文件：file.isFile() 判断是否是一个目录：file.isDirectory() 目录的操作和文件的删除创建一级目录：mkdir() 创建多级目录：mkdirs() 删除空目录或者文件：delete()","categories":[{"name":"技术 学习 java","slug":"技术-学习-java","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0-java/"}],"tags":[{"name":"技术 操作 学习 javaIO流","slug":"技术-操作-学习-javaIO流","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-javaIO%E6%B5%81/"}]},{"title":"Java泛型入门","slug":"05-Java泛型","date":"2022-03-07T13:58:00.000Z","updated":"2022-03-07T14:13:11.035Z","comments":false,"path":"posts/5.html","link":"","permalink":"https://dgithubq.github.io/posts/5.html","excerpt":"","text":"泛型的理解和好处 编译时，检查添加元素的类型，提高了安全性 减少了类型转换次数，提高了效率 不再提示编译警告 泛型介绍泛（广泛）型（类型）=&gt;Integer,String,Dog 泛型又叫参数化类型，是jdk5.0出现的新特性，解决数据类型的安全性问题。 在类声明或实例化时只要制定好需要的具体类型即可。 JAVA泛型可以保证如果程序在编译时没有警告，运行时就不会产生ClassCastException异常，同时，代码更加简洁。 泛型的作用是：可以在声明类时通过一个标识表示类中的某一个属性的类型，或者是某个方法的返回值的类型，或者是参数类型。 泛型的语法泛型的声明其中，T,K,V不代表值，而是表示类型 任何字母都可以。 interface 接口&lt;T&gt;{} interface 接口&lt;T,V&gt;{} 泛型的实例化要在类名后面指定类型参数的值。例如： List&lt;String&gt; strList = new ArrayList&lt;String&gt;(); Iterator&lt;Customer&gt; iterator = customers.iterator(); 泛型使用的细节 注意泛型使用的时候是加入引用类型不是数据类型，比如，加入Integer是正确的，加入int就错误。 在指定泛型具体类型后，可以传入该类型或者子类类型 泛型使用形式 List&lt;Integer&gt;list1 = new ArrayList&lt;Integer&gt;(); List&lt;Integer&gt;list2 = new ArrayList&lt;&gt;();[说明：] 如果我们这样写 List list3 = new ArrayList(); 默认给它的泛型是&lt;E&gt; E就是Object。","categories":[{"name":"技术 学习 java","slug":"技术-学习-java","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0-java/"}],"tags":[{"name":"技术 操作 学习 java泛型","slug":"技术-操作-学习-java泛型","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-java%E6%B3%9B%E5%9E%8B/"}]},{"title":"集合的基础体系","slug":"04-集合基础","date":"2022-03-06T06:54:00.000Z","updated":"2022-03-07T14:09:54.976Z","comments":false,"path":"posts/4.html","link":"","permalink":"https://dgithubq.github.io/posts/4.html","excerpt":"","text":"集合框架体系图单列集合 双列集合 集合的优点 可以动态保存任意的多个对象，使用很方便 提供了一系列方便的操作对象的方法：add、remove、set、get等等 使用集合进行添加，删除新元素的示意代码简洁明了 集合简单的使用ArrayList一次放一个数据所以叫单列集合 ArrayList arrayList = new ArrayList(); arrayList.add(\"jake\"); arrayList.add(\"tom\"); HashMap一次放两个数据所以叫双列集合 HashMap hashMap = new HashMap(); hashMap.put(\"NO1\",\"北京\"); hashMap.put(\"NO2\",\"上海\"); Collection接口和常用方法collection接口实现类的特点public interface Collection&lt;E&gt; extends lterable&lt;E&gt; collection实现子类可以存放多个元素，每个元素可以是Object 有些Collection的实现类，可以存放重复的元素，有些不可以 有些Collection的实现类，有些是有序的(List)，有些不是有序的(Set) Collection接口没有直接的实现子类，是通过它的子接口Set和List来实现的 常用方法 add：添加单个元素 remove：删除指定元素 contains：查找元素是否存在 size：获取元素个数 isEmpty：判断是否为空 clear：清空 addAll：添加多个元素 containsAll：查找多个元素是否都存在 removeAll：删除多个元素","categories":[{"name":"技术 学习 java","slug":"技术-学习-java","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0-java/"}],"tags":[{"name":"技术 操作 学习 java集合","slug":"技术-操作-学习-java集合","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-java%E9%9B%86%E5%90%88/"}]},{"title":"如何在GitHub上搭建hexo博客","slug":"03-如何在GitHub上搭建hexo博客","date":"2022-03-05T10:39:00.000Z","updated":"2022-03-06T04:02:28.897Z","comments":false,"path":"posts/3.html","link":"","permalink":"https://dgithubq.github.io/posts/3.html","excerpt":"","text":"介绍这是一篇关于如何搭建 hexo 博客的文章。 一、大致所需要用到的工具或者网站 GitHub Git Bash HEXO 二、主要步骤 配置好上述工具 创建一个 GitHub 仓库 GitHub 上生成 SSH Keys 生成本地 发布到互联网上 三、具体操作1. 安装Git 和 HEXO这个东西直接去官方网站下载就行了。Git 官网 HEXO官网 2. 创建一个GitHub 仓库在注册好GitHub账号之后，然后去创建一个新的仓库(点击此处的New) 然后此处的Repository name和你的Owner要一样(比如，我的owner是dgithubq,那么name就填dgithubq.github.io)。页面其他的选项默认即可。 然后Add a README file需要勾选上。 到此，点击创建之后，那么你的存储库就已经建成功了，你的博客网址就是你刚才的Repository name。 3. 生成一个SSH Keys这个东西很重要，因为后面上传到网络上面去的时候需要它，所以这一步要仔细一点。但是也不会特别的难。 首先：我们在桌面上进入任何一个文件夹，然后打开下载好的Git Bash，然后我们需要敲打以下的命令来检查ssh是否安装，默认一般是已经安装了： ssh 然后敲打第二个命令来生成SSH Keys（引号中填自己的邮箱）： ssh-keygen -t rsa -C \"xxx@xxx.xxx\" 此时会在我们的文件夹中建立一个ssh，一般会存放在C:\\用户\\Administrator\\.ssh中。 找到文件夹之后，打开其中的id_rsa.pub文件，完全复制其中的内容，然后再去打开GitHub。 在个人设置中找到这个地方： 在里面New SSH key，然后会看到以下需要填的内容： Title中随便取，无所谓，key中填入刚才.pub文件里复制的内容，然后在git bash中输入以下命令测试是否绑定成功即可： ssh -T git@github.com 4. 生成本地博客去一个自己喜欢的地方建一个文件夹，然后在此文件夹中打开git bash,然后开始敲命令： (1) 初始化hexo hexo init 如果没有出现 INFO Start blogging with Hexo！ 就说明有问题，重新执行上面的命令即可，成功之后，刚才的文件夹中会多出很多文件，比如： (2) 静态生成hexo本地页面 hexo s 成功后会出现一个Http://xxx的网址，可以去网页中打开，这就是同志们博客的本地生成的页面。 5. 将博客发布到互联网上(1) 在上一步中生成的文件中，打开_config.yml文件，修改deploy中的东西，一般在最下面。 deploy: type: git repository: https://github.com/XXX/XXX.github.io.git branch: main (2)在你的博客文件下打开git bash输入以下命令，这是安装hexo-deployer-git自动部署工具 npm install hexo-deployer-git --save 生成页面 hexo g 上传到GitHub仓库(很多人第一次上传，由于GitHub是一个国外的服务器，所以第一次会非常难成功，如果没有弹出输入GitHub账号的弹窗，请多试验几次，总会成功的，博主命不好，试了很多次才成功，总之坚持就是胜利！) hexo d 出现这个就是成功了： 这第一个弹窗是输入用户名，下面还有一个弹窗需要注意了！！！ 出现这个弹窗之后，要去到GitHub中个人设置里找到Developer setting开发者设置中创建一个令牌，随便取一个名字，权限为了减少麻烦，建议全选，然后把出现的序列号填入第二个弹窗中。(千万不要直接输入GitHub的密码，可能会导致错误，一旦错误，以上步骤又要重来) 上传成功之后，你的博客就传到互联网上了，你的博客网址就是你的仓库名。 总结以上就是本人自己创建博客的步骤，个人觉得比较详细，应该不会有太大问题，祝各位好运啦~~~!","categories":[{"name":"技术 学习","slug":"技术-学习","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"技术 操作 想法","slug":"技术-操作-想法","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E6%83%B3%E6%B3%95/"}]},{"title":"博客与博主","slug":"01-博客诞生","date":"2022-03-04T13:00:00.000Z","updated":"2022-03-06T04:14:59.793Z","comments":false,"path":"posts/1.html","link":"","permalink":"https://dgithubq.github.io/posts/1.html","excerpt":"","text":"相遇皆是缘分 为什么建博客？肿么说了! 纯属个人兴趣，好玩，唉，就是玩!嘻嘻! 会有些成就感吧,拥有一个自己的博客写一些自己感兴趣的事或物,不是一件很酷的事嘛! 展望博客我会整理一些个人所学的知识或生活方面有兴趣的事发到博客上供大家观摩 关于博主一位准备放飞理想的有志青年，常年emo，喜欢dyn 林深时见鹿，海蓝时见鲸，梦醒时见你 溜了溜了！","categories":[{"name":"生活","slug":"生活","permalink":"https://dgithubq.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"想法","slug":"想法","permalink":"https://dgithubq.github.io/tags/%E6%83%B3%E6%B3%95/"}]},{"title":"测试文章","slug":"02-测试文章","date":"2022-03-04T06:00:00.000Z","updated":"2022-03-21T13:56:20.678Z","comments":false,"path":"posts/2.html","link":"","permalink":"https://dgithubq.github.io/posts/2.html","excerpt":"","text":"测试本章仅用于测试！！！ --dwh","categories":[{"name":"生活","slug":"生活","permalink":"https://dgithubq.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"试验","slug":"试验","permalink":"https://dgithubq.github.io/tags/%E8%AF%95%E9%AA%8C/"}]}],"categories":[{"name":"技术 学习 java","slug":"技术-学习-java","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0-java/"},{"name":"技术 学习","slug":"技术-学习","permalink":"https://dgithubq.github.io/categories/%E6%8A%80%E6%9C%AF-%E5%AD%A6%E4%B9%A0/"},{"name":"生活","slug":"生活","permalink":"https://dgithubq.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"技术 操作 学习 java流","slug":"技术-操作-学习-java流","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-java%E6%B5%81/"},{"name":"技术 操作 学习 java内部类","slug":"技术-操作-学习-java内部类","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-java%E5%86%85%E9%83%A8%E7%B1%BB/"},{"name":"技术 操作 学习 javaI方法","slug":"技术-操作-学习-javaI方法","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-javaI%E6%96%B9%E6%B3%95/"},{"name":"技术 操作 学习 javaIO流","slug":"技术-操作-学习-javaIO流","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-javaIO%E6%B5%81/"},{"name":"技术 操作 学习 java泛型","slug":"技术-操作-学习-java泛型","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-java%E6%B3%9B%E5%9E%8B/"},{"name":"技术 操作 学习 java集合","slug":"技术-操作-学习-java集合","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E5%AD%A6%E4%B9%A0-java%E9%9B%86%E5%90%88/"},{"name":"技术 操作 想法","slug":"技术-操作-想法","permalink":"https://dgithubq.github.io/tags/%E6%8A%80%E6%9C%AF-%E6%93%8D%E4%BD%9C-%E6%83%B3%E6%B3%95/"},{"name":"想法","slug":"想法","permalink":"https://dgithubq.github.io/tags/%E6%83%B3%E6%B3%95/"},{"name":"试验","slug":"试验","permalink":"https://dgithubq.github.io/tags/%E8%AF%95%E9%AA%8C/"}]}